from pytube import YouTube
import warnings
import os, math, time
import xml.etree.ElementTree as ElementTree
from xml.dom.minidom import *
from typing import Dict, Optional
from html import unescape

languages = ['a.en', 'en', 'a.en-GB', 'en-GB', 'a.ru', 'ru']
#languages = ['a.ru']

def DownloadCaption(link):
    with warnings.catch_warnings():
        warnings.simplefilter("ignore")
        warnings.warn("deprecated", DeprecationWarning)
    caption = 'Субтитры отсутствуют'
    language = 'Отсутствует язык'
    
    try:
        yt = YouTube(link)
    except:
        print("Error YT link")
        return caption, '', language

    name = yt.title
    block_list = ["\\", "/", ":", "*", "?", "<", ">", "|"]
    for char in block_list:
        name = name.replace(char, '')

    print(yt.captions)
    for lang in languages:
        try:
            caption_lang = yt.captions[lang]
            caption = ConvertionXML(caption_lang.xml_captions)
            language = lang
        except:
            pass
    #print(caption_lang.xml_captions)
    return caption, name, language

def Caption2sbv(caption):
    result = ''
    data = caption.split('\n')
    for i in range(0, len(data)):
        if i % 4 == 1:
            result += data[i].replace(',', '.').replace(' --> ', ',') + '\n'
        elif i % 4 == 2:
            result += data[i] + '\n\n'
    return result

def float_to_srt_time_format(d: float) -> str:
    fraction, whole = math.modf(d)
    time_fmt = time.strftime("%H:%M:%S,", time.gmtime(whole))
    ms = f"{fraction:.3f}".replace("0.", "")
    return time_fmt + ms

def ConvertionXML(xml_captions):
    caption = ""
    write = False
    for char in xml_captions:
        if char == "<":
            if write:
                caption += " "
            write = False
        elif char == ">":
            write = True
        if write:
            caption += char
    return caption

def ConvertionXMLLegacy2(xml_captions):
    doc = parseString(xml_captions)
    node = doc.documentElement

    caption = ""
    lines = node.getElementsByTagName("p")
    for line in lines:
        caption += line.toxml() + " "
    print(caption)
    return "\n".join(segments).strip()


def ConvertionXMLLegacy(xml_captions):
    segments = []
    caps = xml_captions.split('\n')
    sequence_number = 0
    print(xml_captions)
    for i in range(2, len(caps)):
        text = caps[i]
        print(text)
        text = text.replace("<p t=\"", "")
        text = text.replace("\" d=\"", "\n")
        text = text.replace("\">", "\n")
        text = text.replace("</p>", "")
        line = text.split("\n")

        try:
            start = float(line[0])
        except:
            start = 0.0
        try:
            duration = float(line[1])
        except:
            duration = 0.0
        end = start + duration
        sequence_number += 1

        caption = "{seq}\n{start} --> {end}\n{text}\n".format(
            seq = sequence_number,
            start = float_to_srt_time_format(start),
            end = float_to_srt_time_format(end),
            text = line[2],
        )
        segments.append(caption)
    return "\n".join(segments).strip()